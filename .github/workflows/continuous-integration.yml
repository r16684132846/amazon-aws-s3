name: CI

on:
  pull_request:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
# Allow one instance of this workflow per pull request, and cancel older runs when new changes are pushed
concurrency:
  group: ci-pr-${{ github.ref }}
  cancel-in-progress: true

env:
  RUN: ${{ github.run_id }}-${{ github.run_number }}
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  jvm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # we build with a specific JDK version but source/target compatibility should ensure the jar is usable by
        # the target versions we want to support
        java-version:
          - 8
          - 11
          - 17
          - 21
    steps:
      - name: Set start timestamp
        id: start
        run: printf 'timestamp=%(%s)T\n' >> "$GITHUB_OUTPUT"
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          path: 'aws-sdk-kotlin'
      - name: Setup Build
        uses: ./aws-sdk-kotlin/.github/actions/setup-build
      - name: Configure Gradle
        uses: aws/aws-kotlin-repo-tools/.github/actions/configure-gradle@main
        with:
          working-directory: ./aws-sdk-kotlin
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CI_AWS_ROLE_ARN }}
          aws-region: us-west-2
      - name: Setup kat
        uses: aws/aws-kotlin-repo-tools/.github/actions/setup-kat@main
      - name: Test
        working-directory: ./aws-sdk-kotlin
        shell: bash
        run: |
          pwd
          ls -lsa
          ./gradlew -Ptest.java.version=${{ matrix.java-version }} jvmTest --stacktrace
      - name: Calculate duration
        id: end
        if: always()
        run: |
          printf -v now '%(%s)T'
          duration=$(( now - ${{ steps.start.outputs.timestamp }} ))
          echo "duration=$duration" >> "$GITHUB_OUTPUT"
      - name: Emit metrics
        if: always() # run this step even if previous steps failed or the job is canceled
        uses: aws/aws-kotlin-repo-tools/.github/actions/emit-metrics@main
        with:
          namespace: CI Metrics
          dimensions: |
            Product=aws-sdk-kotlin
            JobName=${{ github.job }}(${{ matrix.java-version }})
            Branch=${{ github.base_ref || github.ref_name }}
          metrics: |
            WorkflowSucceeded:${{ job.status == 'success' && '1' || '0' }}:Count
            WorkflowDuration:${{ steps.end.outputs.duration }}:Seconds
      - name: Save Test Reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: '**/build/reports'

  all-platforms:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Set start timestamp
        id: start
        shell: bash
        run: echo "timestamp=$(date +%s)" >> "$GITHUB_OUTPUT"
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          path: 'aws-sdk-kotlin'
      - name: Setup Build
        uses: ./aws-sdk-kotlin/.github/actions/setup-build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CI_AWS_ROLE_ARN }}
          aws-region: us-west-2
      - name: Setup kat
        uses: aws/aws-kotlin-repo-tools/.github/actions/setup-kat@main
      - name: Configure Gradle - smithy-kotlin
        uses: aws/aws-kotlin-repo-tools/.github/actions/configure-gradle@main
        with:
          working-directory: ./smithy-kotlin
      - name: Disable native builds # FIXME remove this step once K/N is merged
        shell: bash
        run: |
          echo "Appending aws.kotlin.native=false to smithy-kotlin/gradle.properties..."
          echo -e "\n\naws.kotlin.native=false" >> ./smithy-kotlin/gradle.properties
          echo "Appending aws.kotlin.native=false to aws-sdk-kotlin/gradle.properties..."
          echo -e "\n\naws.kotlin.native=false" >> ./aws-sdk-kotlin/gradle.properties
      - name: Build smithy-kotlin
        working-directory: ./smithy-kotlin
        shell: bash
        run: |
          # protocol tests require everything is published
          pwd
          ./gradlew assemble
          ./gradlew publishToMavenLocal
      - name: Configure Gradle aws-sdk-kotlin
        uses: aws/aws-kotlin-repo-tools/.github/actions/configure-gradle@main
        with:
          working-directory: ./aws-sdk-kotlin
      - name: Test
        working-directory: ./aws-sdk-kotlin
        shell: bash
        run: |
          pwd
          ./gradlew :build-support:test
          ./gradlew publishToMavenLocal
          ./gradlew apiCheck
          ./gradlew test jvmTest
          ./gradlew testAllProtocols
      - name: Calculate duration
        id: end
        if: always()
        shell: bash
        run: |
          now=$(date +%s)
          duration=$(( now - ${{ steps.start.outputs.timestamp }} ))
          echo "duration=$duration" >> "$GITHUB_OUTPUT"
      - name: Emit metrics
        if: always() # run this step even if previous steps failed or the job is canceled
        uses: aws/aws-kotlin-repo-tools/.github/actions/emit-metrics@main
        with:
          namespace: CI Metrics
          dimensions: |
            Product=aws-sdk-kotlin
            JobName=${{ github.job }}(${{ matrix.os }})
            Branch=${{ github.base_ref || github.ref_name }}
          metrics: |
            WorkflowSucceeded:${{ job.status == 'success' && '1' || '0' }}:Count
            WorkflowDuration:${{ steps.end.outputs.duration }}:Seconds
      - name: Save Test Reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: '**/build/reports'
